diff --git a/Source/WebCore/platform/audio/gstreamer/AudioSourceProviderGStreamer.cpp b/Source/WebCore/platform/audio/gstreamer/AudioSourceProviderGStreamer.cpp
index 54b39f45a5ba..177e2d847192 100644
--- a/Source/WebCore/platform/audio/gstreamer/AudioSourceProviderGStreamer.cpp
+++ b/Source/WebCore/platform/audio/gstreamer/AudioSourceProviderGStreamer.cpp
@@ -18,7 +18,7 @@
 
 #include "config.h"
 #include "AudioSourceProviderGStreamer.h"
-
+#include <iostream>
 #if ENABLE(WEB_AUDIO) && ENABLE(VIDEO) && USE(GSTREAMER)
 
 #include "AudioBus.h"
@@ -152,9 +152,18 @@ void AudioSourceProviderGStreamer::configureAudioBin(GstElement* audioBin, GstEl
     GstElement* audioResample = gst_element_factory_make("audioresample", nullptr);
     GstElement* audioResample2 = gst_element_factory_make("audioresample", nullptr);
     GstElement* volumeElement = gst_element_factory_make("volume", "volume");
-    GstElement* audioSink = gst_element_factory_make("autoaudiosink", nullptr);
+    GstElement* capsfilter = gst_element_factory_make("capsfilter", nullptr);
+    GstElement* audioSink = gst_element_factory_make("pulsesink", nullptr);
+
+    GstCaps *caps = gst_caps_from_string("audio/x-raw,format=S16LE,layout=interleaved,rate=48000,channels=2");
+    g_object_set(capsfilter, "caps", caps, nullptr);
+    gst_caps_unref(caps);
+
+    std::string device = getenv("recorder_service_pulse_device_name");
+    g_object_set(audioSink, "device", device.c_str(), nullptr);
+    std::cout << "Virtual pulse device name: " << device << "\n";
 
-    gst_bin_add_many(GST_BIN(m_audioSinkBin.get()), audioTee, audioQueue, audioConvert, audioResample, volumeElement, audioConvert2, audioResample2, audioSink, nullptr);
+    gst_bin_add_many(GST_BIN(m_audioSinkBin.get()), audioTee, audioQueue, audioConvert, audioResample, volumeElement, audioConvert2, audioResample2, capsfilter, audioSink, nullptr);
 
     // In cases where the audio-sink needs elements before tee (such
     // as scaletempo) they need to be linked to tee which in this case
@@ -178,7 +187,8 @@ void AudioSourceProviderGStreamer::configureAudioBin(GstElement* audioBin, GstEl
     gst_element_link_pads_full(audioResample, "src", volumeElement, "sink", GST_PAD_LINK_CHECK_NOTHING);
     gst_element_link_pads_full(volumeElement, "src", audioConvert2, "sink", GST_PAD_LINK_CHECK_NOTHING);
     gst_element_link_pads_full(audioConvert2, "src", audioResample2, "sink", GST_PAD_LINK_CHECK_NOTHING);
-    gst_element_link_pads_full(audioResample2, "src", audioSink, "sink", GST_PAD_LINK_CHECK_NOTHING);
+    gst_element_link_pads_full(audioResample2, "src", capsfilter, "sink", GST_PAD_LINK_CHECK_NOTHING);
+    gst_element_link_pads_full(capsfilter, "src", audioSink, "sink", GST_PAD_LINK_CHECK_NOTHING);
 }
 
 void AudioSourceProviderGStreamer::provideInput(AudioBus* bus, size_t framesToProcess)
